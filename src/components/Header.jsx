'use client'
import Image from 'next/image'
import { Dialog, Menu } from '@headlessui/react'
import {
    Bars3CenterLeftIcon,
    BellIcon,
    ClockIcon,
    CreditCardIcon,
    DocumentChartBarIcon,
    QuestionMarkCircleIcon,
    ScaleIcon,
    ShieldCheckIcon,
    UserGroupIcon,
    XMarkIcon,
} from '@heroicons/react/24/outline'
import {
    BanknotesIcon,
    BuildingOfficeIcon,
    CheckCircleIcon,
    ChevronDownIcon,
    ChevronRightIcon,
} from '@heroicons/react/20/solid'
import { useRouter, usePathname } from 'next/navigation'
import { Fragment } from 'react'
import { Transition } from '@headlessui/react'
import {
    Bars3BottomLeftIcon,
    CogIcon,
    HeartIcon,
    HomeIcon,
    PhotoIcon,
    RectangleStackIcon,
    Squares2X2Icon as Squares2X2IconOutline,
} from '@heroicons/react/24/outline'
import {
    Bars4Icon,
    MagnifyingGlassIcon,
    PencilIcon,
    PlusIcon,
    Squares2X2Icon as Squares2X2IconMini,
} from '@heroicons/react/20/solid'
import useFront from '@/hooks/useFront'
import logoIcon from '../../public/logoespirales.png'
import logoTipo from '../../public/logoespirales.png'



export const metadata = {
    title: 'Create Next App',
    description: 'Generated by create next app',
}

const statusStyles = {
    success: 'bg-green-100 text-green-800',
    processing: 'bg-yellow-100 text-yellow-800',
    failed: 'bg-gray-100 text-gray-800',
}

function classNames(...classes) {
    return classes.filter(Boolean).join(' ')
}

export default function Header() {
    const pathname = usePathname()
    const router = useRouter()
    const {
        mobileMenuOpen,
        setMobileMenuOpen,
        UserDataJson,
        logout
    } = useFront()

    return (
        <>
            {pathname !== '/' && <div className="flex h-16  bg-azul-pantone text-BlancoIvory justify-between px-5 lg:border-none">
                <div className='flex gap-2 items-center'>
                    <Image
                        className="h-8 w-auto"
                        src={logoTipo ?? process.env.NOT_IMAGE}
                        alt="Your Company"
                    />
                    <h1 className='text-white uppercase font-extrabold'>
                        Corpoelec Industrial
                    </h1>
                </div>
                <button
                    type="button"
                    className="border-r border-gray-200 px-4 text-gray-400 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-cyan-500 lg:hidden"
                    onClick={() => setMobileMenuOpen(true)}
                >
                    <span className="sr-only">Open sidebar</span>
                    <Bars3CenterLeftIcon className="h-6 w-6" aria-hidden="true" />
                </button>
                {/* Search bar */}

                <div className="ml-4 flex items-center md:ml-6">
                    <button
                        type="button"
                        className="rounded-full bg-cyan-400 p-1 text-white hover:text-white focus:outline-none focus:ring-2 focus:ring-cyan-500 focus:ring-offset-2"
                    >
                        <span className="sr-only">View notifications</span>
                        <BellIcon className="h-6 w-6" aria-hidden="true" />
                    </button>

                    {/* Profile dropdown */}
                    <Menu as="div" className="relative ml-3">
                        <div>
                            <Menu.Button className="flex max-w-xs items-center rounded-full bg-gray-50 text-sm focus:outline-none focus:ring-2 focus:ring-cyan-500 focus:ring-offset-2 lg:rounded-md lg:p-2 lg:hover:bg-gray-100">
                                { UserDataJson && <Image
                                    className="h-8 w-8 rounded-full bg-BlancoIvory"
                                    width={100}
                                    height={30}
                                    src={ !!UserDataJson?.image ? UserDataJson?.image : logoIcon }
                                    alt=""
                                />}
                                <span className="ml-3 hidden text-sm font-medium text-gray-700 lg:block">
                                    {UserDataJson?.userName}
                                </span>
                                <ChevronDownIcon
                                    className="ml-1 hidden h-5 w-5 flex-shrink-0 text-gray-400 lg:block"
                                    aria-hidden="true"
                                />
                            </Menu.Button>
                        </div>
                        <Transition
                            as={Fragment}
                            enter="transition ease-out duration-100"
                            enterFrom="transform opacity-0 scale-95"
                            enterTo="transform opacity-100 scale-100"
                            leave="transition ease-in duration-75"
                            leaveFrom="transform opacity-100 scale-100"
                            leaveTo="transform opacity-0 scale-95"
                        >
                            <Menu.Items className="absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-md bg-BlancoIvory py-1 shadow-lg  ring-black ring-opacity-5 focus:outline-none">
                                <Menu.Item>
                                    {({ active }) => (
                                        <button
                                            onClick={() => {
                                                logout()
                                            }}
                                            className={classNames(active ? 'bg-Gris' : '', 'block px-4 py-2 w-full text-sm text-negro')}
                                        >
                                            Finalizar Sesion
                                        </button>
                                    )}
                                </Menu.Item>
                            </Menu.Items>
                        </Transition>
                    </Menu>
                </div>
            </div>}
        </>

    )
}